// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id             Int           @id @default(autoincrement())
  name           String
  phone          String?       @unique
  email          String?       @unique
  avatarUrl      String?
  created        DateTime      @default(now())
  upadated       DateTime      @updatedAt
  tokens         Token[]
  products       Product[]
  favLists       FavList[]
  posts          Post[]
  answers        Answer[]
  curious        CuriousPost[]
  writeReviews   Review[]      @relation(name: "writeReview")
  receiveReviews Review[]      @relation(name: "receiveReview")
}

model Token {
  id       Int      @id @default(autoincrement())
  payload  String   @unique
  created  DateTime @default(now())
  upadated DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
}

// 상품
model Product {
  id       Int       @id @default(autoincrement())
  name     String
  imgUrl   String    @db.LongText
  price    Int
  des      String    @db.MediumText
  created  DateTime  @default(now())
  upadated DateTime  @updatedAt
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  favLists FavList[]
}

// 상품 - 관심 목록 (Fav)
model FavList {
  id        Int      @id @default(autoincrement())
  created   DateTime @default(now())
  upadated  DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

// 동네생활 - 질문
model Post {
  id        Int           @id @default(autoincrement())
  question  String        @db.MediumText
  longitude Float?
  latitude  Float?
  created   DateTime      @default(now())
  upadated  DateTime      @updatedAt
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  answers   Answer[]
  curious   CuriousPost[]
}

// 동네생활 - 궁금해요
model CuriousPost {
  id       Int      @id @default(autoincrement())
  created  DateTime @default(now())
  upadated DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   Int
}

// 동네생활 - 답변
model Answer {
  id       Int      @id @default(autoincrement())
  answer   String   @db.MediumText
  created  DateTime @default(now())
  upadated DateTime @updatedAt
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   Int
}

// 유저 리뷰
model Review {
  id         Int      @id @default(autoincrement())
  review     String   @db.MediumText
  created    DateTime @default(now())
  upadated   DateTime @updatedAt
  writer     User     @relation(name: "writeReview", fields: [writerId], references: [id])
  receiver   User     @relation(name: "receiveReview", fields: [ReceiverId], references: [id])
  writerId   Int
  ReceiverId Int
}
